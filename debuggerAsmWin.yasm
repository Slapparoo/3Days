GLOBAL jit_DebugggerHit;
GLOBAL jit_ParentFramePtrs;
USE64
SECTION .text
;ctl+8+8+8+8
;bp+8+8+8
;routine+8+8
;RET+8
;RBP+0
jit_DebugggerHit: PUSH RBP
MOV RBP,RSP
PUSH RBX
MOV RAX,[RBP+8];
MOV RBX,[RBP+8+8+8+8]
MOV [RBX+16], RAX ;jit_debugger_ctrl.last_rip
POP RBX
MOV RBP,RSP
MOV RAX,QWORD  [RSP+8+8+8] ;ctrl
CMP BYTE  [RAX],0
JNE jit_DebugggerHit.enter
;JIT_DBG_STEP is 1
;JIT_DBG_NEXT is 2
;JIT_DBG_FIN is 3
MOV RAX,QWORD  [RSP+8+8+8+8]
CMP RAX,0
JNE jit_DebugggerHit.step_check
JMP jit_DebugggerHit.exit_lab
.enter ;
SUB RSP,256+8;Align to 16 bytes
MOV [RSP+8],RBX
MOV [RSP+16],RCX
MOV [RSP+24],RDX
MOV [RSP+32],RSI
MOV [RSP+40],RDI
MOV RAX,[RBP]
MOV [RSP+56],RAX
MOV [RSP+64],R8
MOV [RSP+72],R9
MOV [RSP+80],R10
MOV [RSP+88],R11
MOV [RSP+96],R12
MOV [RSP+112],R13
MOV [RSP+200],R14
MOV [RSP+120],R15
MOVSD [RSP+128],XMM0
MOVSD [RSP+136],XMM1
MOVSD [RSP+144],XMM2
MOVSD [RSP+152],XMM3
MOVSD [RSP+160],XMM4
MOVSD [RSP+168],XMM5
MOVSD [RSP+176],XMM6
MOVSD [RSP+184],XMM7
MOV RCX,RSP
MOV RDX,QWORD [RSP+256+8+8+8+8]
MOV RAX,QWORD [RSP+256+8+8+8] ;Routine
MOV R8,QWORD [RSP+256+8+8] ;Return address
SUB RSP,0x20
PUSH R9
PUSH R8
PUSH RDX
PUSH RCX
CALL RAX
ADD RSP,0x40
MOV RAX,[RSP]
MOV RBX,[RSP+8]
MOV RCX,[RSP+16]
MOV RDX,[RSP+24]
MOV RSI,[RSP+32]
MOV RDI,[RSP+40]
MOV R8,[RSP+64]
MOV R9,[RSP+72]
MOV R10,[RSP+80]
MOV R11,[RSP+88]
MOV R12,[RSP+96]
MOV R13,[RSP+112]
MOV R14,[RSP+200]
MOV R15,[RSP+120]
MOVSD XMM0,[RSP+128]
MOVSD XMM1,[RSP+136]
MOVSD XMM2,[RSP+144]
MOVSD XMM3,[RSP+152]
MOVSD XMM4,[RSP+160]
MOVSD XMM5,[RSP+168]
MOVSD XMM6,[RSP+176]
MOVSD XMM7,[RSP+184]
ADD RSP,256+8
.exit_lab POP RBP
RET
.step_check
;JIT_DBG_STEP is 1
;JIT_DBG_NEXT is 2
;JIT_DBG_FIN is 3
MOV RAX, [RAX] ;ctrl is in RAX
CMP RAX,1
JE jit_DebugggerHit.enter
CMP RAX,2
JNE jit_DebugggerHit.next
MOV RAX,QWORD  [RSP+8+8+8+8]
MOV RAX,[RAX+8]
;Check if is equal or greater than previous stack pointer
CMP RAX,[RBP]
JBE jit_DebugggerHit.enter
.next
CMP RAX,3
JNE jit_DebugggerHit.exit_lab
;Check if is greater than previous stack pointer
MOV RAX,QWORD  [RSP+8+8+8+8]
MOV RAX,[RAX+8]
CMP RAX,[RBP]
JB jit_DebugggerHit.enter
JMP jit_DebugggerHit.exit_lab
jit_ParentFramePtrs:
;; Todo
RET

SECTION .data
