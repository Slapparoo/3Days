HEADERS := HolyC.tab.h 3d.h
CC := zapcc
CFLAGS :=  `pkg-config --cflags --libs sdl2` -g3 -Os -Wformat=0 -Wreturn-type -DUSEGC -DBSD -Wno-parentheses -Wno-switch #-fsanitize=address
OBJS := aot.o tags.o rl.o vec.o rt.o jitlib-core.o map.o compile.o lexer.o HolyC.o unesc.o tosprn.o gc.o debugger.o rope.o at3.o exceptLin.o asm.o
all: 3d_tests 3d
	echo "Done"
HCRT := HCRT/ASM.HC  HCRT/BITS.HC  HCRT/CHAR.HC  HCRT/COMPRESS.HC  HCRT/FIFO.HC  HCRT/FILE.HC  HCRT/FS.HC  HCRT/HASH.HC  HCRT/HCRT.HC  HCRT/MATH.HC  HCRT/Opcodes.DD  HCRT/PRINT.HC  HCRT/QSORT.HC
HCRT/HCRT.BIN: 3d $(HCRT)
	./3d --noruntime -c HCRT/HCRT.BIN HCRT/HCRT.HC --binheader HCRT/HCRT.HH
package: HCRT/HCRT.BIN 3d FreeBSD_pkg.sh
	tcsh FreeBSD_pkg.sh
main.o: main.c
	$(CC) $(CFLAGS) -c  main.c -o $@
3d: $(OBJS) main.o
	gcc $(CFLAGS) $(OBJS) main.o -lm -lncurses -ltinfo -lpthread -lreadline -o $@
3d_tests: $(OBJS) tests.c
	gcc $(CFLAGS) $(OBJS) tests.c -lm -lncurses -ltinfo -lpthread -lreadline -o $@
HolyC.o: HolyC.tab.c $(HEADERS)
	$(CC) $(CFLAGS) -g -c HolyC.tab.c -o $@
HolyC.tab.c HolyC.tab.h: HolyC.y
	bison -v -d -b HolyC HolyC.y
vec.o: ext/vec/src/vec.c $(HEADERS)
	$(CC) $(CFLAGS) -c ext/vec/src/vec.c  -o $@
map.o: ext/map/src/map.c $(HEADERS)
	$(CC) $(CFLAGS) -c ext/map/src/map.c -o $@
compile.o: compile.c 3d.h $(HEADERS)
	$(CC) $(CFLAGS) -c compile.c -o $@
lexer.o: lexer.c 3d.h $(HEADERS)
	$(CC) $(CFLAGS) -c lexer.c -o $@
jitlib-core.o: ext/myjit/myjit/jitlib-core.c
	$(CC) $(CFLAGS) -c ext/myjit/myjit/jitlib-core.c -o $@
tosprn.o: TOSPrint.c $(HEADERS)
	$(CC) $(CFLAGS) -c TOSPrint.c -o $@
unesc.o: ext/C_Unescaper/escaper.c  $(HEADERS)
	$(CC) $(CFLAGS) -c ext/C_Unescaper/escaper.c -o unesc.o
rope.o: ext/mropes/src/rope.c  $(HEADERS)
	$(CC) $(CFLAGS) -c ext/mropes/src/rope.c -o $@
at3.o: ext/argtable3/argtable3.c  $(HEADERS)
	$(CC) $(CFLAGS) -c ext/argtable3/argtable3.c -o $@
rl.o: rl.c  $(HEADERS)
	$(CC) $(CFLAGS) -c rl.c -o $@
rt.o: runtime.c  $(HEADERS)
	$(CC) $(CFLAGS) -c runtime.c -o $@
gc.o: gc.c gc.h  $(HEADERS)
	$(CC) $(CFLAGS) -c gc.c -o gc.o
debugger.o: debugger.c  $(HEADERS)
	$(CC) $(CFLAGS) -c debugger.c -o $@
clean:
	rm *.o HolyC.tab.c HolyC.tab.h epm 3d 3d_tests || cd ext/epm-5.0.0 &&  make clean
exceptLin.o: exceptLin.yasm
	yasm -f elf64 exceptLin.yasm -o $@
tags.o: tags.c  $(HEADERS)
	$(CC) $(CFLAGS) -c tags.c -o $@
asm.o: asm.c $(HEADERS)
	$(CC) $(CFLAGS) -c asm.c -o asm.o
aot.o: aot.c $(HEADERS)
	$(CC) $(CFLAGS) -c aot.c -o aot.o
sexy:
	astyle *.c *.h
